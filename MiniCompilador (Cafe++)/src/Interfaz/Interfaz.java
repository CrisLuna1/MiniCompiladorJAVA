package Interfaz;

import Lexico.AnalizadorLexico;
import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import java.nio.file.Paths;
import java.awt.Color;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;

/**
 *
 * @author Cluna
 */
public class Interfaz extends javax.swing.JFrame {

    public Interfaz() {

        initComponents();
        this.setLocationRelativeTo(null);
        PnlToken.setVisible(false);
        txtCode.requestFocus();
        //consola.setVisible(false);

        splitPaneCentral.getBottomComponent().setVisible(false);
        splitPaneEC.getRightComponent().setVisible(false);

        SimpleAttributeSet attribs = new SimpleAttributeSet();
        StyleConstants.setAlignment(attribs, StyleConstants.ALIGN_RIGHT);
        StyleConstants.setForeground(attribs, Color.white);
        StyleConstants.setBold(attribs, true);
        txtNumLinea.setParagraphAttributes(attribs, true);

        ThreadNumberCode nC = new ThreadNumberCode();
        nC.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        splitPaneCentral = new javax.swing.JSplitPane();
        panelEditor = new javax.swing.JPanel();
        splitPaneEC = new javax.swing.JSplitPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        txtNumLinea = new javax.swing.JTextPane();
        txtCode = new javax.swing.JTextPane();
        PnlToken = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TblAnalisis = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem17 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cafe++");
        setSize(new java.awt.Dimension(800, 600));
        addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                formPropertyChange(evt);
            }
        });

        splitPaneCentral.setBorder(null);
        splitPaneCentral.setDividerSize(2);
        splitPaneCentral.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        panelEditor.setAutoscrolls(true);
        panelEditor.setPreferredSize(new java.awt.Dimension(458, 500));
        panelEditor.setLayout(new java.awt.BorderLayout());

        splitPaneEC.setDividerLocation(200);
        splitPaneEC.setDividerSize(2);

        jScrollPane2.setMinimumSize(new java.awt.Dimension(400, 19));
        jScrollPane2.setPreferredSize(new java.awt.Dimension(400, 52));

        jPanel2.setLayout(new java.awt.BorderLayout());

        txtNumLinea.setEditable(false);
        txtNumLinea.setBackground(new java.awt.Color(204, 0, 102));
        txtNumLinea.setFont(new java.awt.Font("Consolas", 3, 14)); // NOI18N
        txtNumLinea.setForeground(new java.awt.Color(0, 0, 0));
        txtNumLinea.setText("1");
        txtNumLinea.setMinimumSize(new java.awt.Dimension(14, 25));
        txtNumLinea.setPreferredSize(new java.awt.Dimension(30, 50));
        jPanel2.add(txtNumLinea, java.awt.BorderLayout.LINE_START);
        txtNumLinea.getAccessibleContext().setAccessibleName("");

        txtCode.setBackground(new java.awt.Color(255, 255, 255));
        txtCode.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        txtCode.setSelectionColor(new java.awt.Color(0, 51, 255));
        txtCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodeKeyTyped(evt);
            }
        });
        jPanel2.add(txtCode, java.awt.BorderLayout.CENTER);

        jScrollPane2.setViewportView(jPanel2);

        splitPaneEC.setLeftComponent(jScrollPane2);

        PnlToken.setPreferredSize(new java.awt.Dimension(400, 100));
        PnlToken.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Tabla de Tokens"));
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setPreferredSize(new java.awt.Dimension(200, 436));

        TblAnalisis.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        TblAnalisis.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Linea", "Token", "Componente"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TblAnalisis.setMinimumSize(new java.awt.Dimension(100, 0));
        jScrollPane1.setViewportView(TblAnalisis);
        if (TblAnalisis.getColumnModel().getColumnCount() > 0) {
            TblAnalisis.getColumnModel().getColumn(0).setResizable(false);
            TblAnalisis.getColumnModel().getColumn(1).setResizable(false);
        }

        PnlToken.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel1.setBackground(new java.awt.Color(247, 247, 247));
        jPanel1.setPreferredSize(new java.awt.Dimension(20, 100));
        jPanel1.setLayout(new java.awt.GridLayout(20, 0, 0, 2));
        PnlToken.add(jPanel1, java.awt.BorderLayout.LINE_START);

        splitPaneEC.setRightComponent(PnlToken);

        panelEditor.add(splitPaneEC, java.awt.BorderLayout.CENTER);

        splitPaneCentral.setTopComponent(panelEditor);

        jPanel3.setBackground(java.awt.SystemColor.activeCaptionBorder);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1248, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 55, Short.MAX_VALUE)
        );

        splitPaneCentral.setRightComponent(jPanel3);

        getContentPane().add(splitPaneCentral, java.awt.BorderLayout.CENTER);

        jMenuBar1.setBackground(new java.awt.Color(255, 0, 0));
        jMenuBar1.setForeground(new java.awt.Color(255, 255, 255));
        jMenuBar1.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N

        jMenu1.setBackground(new java.awt.Color(0, 0, 51));
        jMenu1.setText("Archivo");

        jMenuItem1.setText("Abrir archivo");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Compilar");

        jMenuItem2.setText("Análisis Lexico");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuItem3.setText("Análisis Sintáctico");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Ejemplos");

        jMenuItem10.setText("Imprimir");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem10);

        jMenuItem6.setText("Declara y Asignar");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem6);

        jMenuItem5.setText("Condiciones");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem5);

        jMenuItem17.setText("Estructura Si");
        jMenuItem17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem17ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem17);

        jMenuItem7.setText("Ciclo mientras");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem7);

        jMenuItem8.setText("Ciclo repetir");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem8);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void formPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_formPropertyChange

    }//GEN-LAST:event_formPropertyChange

    private void txtCodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodeKeyTyped

    }//GEN-LAST:event_txtCodeKeyTyped

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        String aux = "";
        String texto = "";
        boolean existe;
        String direccion;
        try {
            // llamamos el metodo que permite cargar la ventana
            JFileChooser fc = new JFileChooser();
            FileNameExtensionFilter filtro = new FileNameExtensionFilter(".txt", "txt");
            fc.setFileFilter(filtro);
            fc.showOpenDialog(fc);
            File abre = fc.getSelectedFile();
            fc.addChoosableFileFilter(filtro);

            // recorremos el archivo, lo leemos para plasmarlo en el area de
            // texto
            int status = 0;
            if (abre.getName().endsWith(".txt")) {
                if (fc != null) {

                    FileReader archivos = new FileReader(abre);

                    BufferedReader lee = new BufferedReader(archivos);
                    while ((aux = lee.readLine()) != null) {
                        texto += aux + "\n";
                        existe = true;
                    }
                    lee.close();
                    archivos.close();
                }

                txtCode.setText(new String(texto.getBytes("UTF-8")));
            } else {
                JOptionPane.showMessageDialog(null, "Solo se acepta formato .txt", "ERROR", 0);
            }

            if (status == JFileChooser.CANCEL_OPTION) {
                JOptionPane.showMessageDialog(null, "No eligio ningun archivo", "Error", 0);
            }
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, ex + ""
                    + "\nNo se ha encontrado el archivo", "ADVERTENCIA!!!",
                    JOptionPane.WARNING_MESSAGE);
        } catch (NullPointerException ex) {
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed

        splitPaneEC.getRightComponent().setVisible(true);
        splitPaneEC.setDividerLocation(0.70);
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        abrirArchivoCodigo("ciclo_repetir.txt", txtCode);
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        abrirArchivoCodigo("ciclo_mientras.txt", txtCode);
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem17ActionPerformed
        abrirArchivoCodigo("estructura_if.txt", txtCode);
    }//GEN-LAST:event_jMenuItem17ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        abrirArchivoCodigo("condi.txt", txtCode);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        abrirArchivoCodigo("estructuraAmplia.txt", txtCode);
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        abrirArchivoCodigo("imprimir.txt", txtCode);
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        abrirArchivoCodigo("leer.txt", txtCode);
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem15ActionPerformed
        abrirArchivoCodigo("estructura_basica.txt", txtCode);
    }//GEN-LAST:event_jMenuItem15ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed

    }//GEN-LAST:event_jMenuItem3ActionPerformed
    private boolean sintaxisValida(String codigo) {
        boolean inicioEncontrado = codigo.startsWith("INICIO");
        return inicioEncontrado;
    }


    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) TblAnalisis.getModel();
        modelo.setRowCount(0);
        try {
            String codigo = txtCode.getText();
            String tok = "";
            int lin = 0;
            String lex = "";
            Reader reader = new BufferedReader(new BufferedReader(new StringReader(codigo)));
            AnalizadorLexico lexico = new AnalizadorLexico(reader);
            lexico.estilo.insertarCodigoPane(txtCode);
            boolean errorEncontrado = false;
            while (true) {
                lexico.next_token();
                if (lexico.yytext().equals("")) {
                    break;
                }
                lin = lexico.numLinea() + 1;
                tok = lexico.nameToken;
                lex = lexico.yytext();
                String Validar = txtCode.getText();
                if (!sintaxisValida(Validar)) {
                    JOptionPane.showMessageDialog(this, "Coloca de primero la plabra \n "
                            + "INICIO ", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                if (tok.contains("ERROR")) {
                    Object[] row1 = {lin, tok, lex};
                    modelo.addRow(row1);
                    errorEncontrado = true;
                } else if (!errorEncontrado) {
                    Object[] row1 = {lin, tok, lex};
                    modelo.addRow(row1);
                }
            }
            modelo.removeRow(0);
            txtCode = lexico.estilo.componente;
        } catch (IOException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
        TblAnalisis.setModel(modelo);
        PnlToken.setVisible(true);
        splitPaneEC.setDividerLocation(0.70);

    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void abrirArchivoCodigo(String nombreArchivo, JTextPane txt) {
        String url = Paths.get(".").toAbsolutePath().normalize().toString();
        String path = url + "\\src\\ejemplos\\" + nombreArchivo;
        String aux = "";
        String texto = "";
        boolean existe;
        try {
            File archivo = new File(path);
            FileReader archivos = new FileReader(archivo);
            BufferedReader lee = new BufferedReader(archivos);
            try {
                while ((aux = lee.readLine()) != null) {
                    texto += aux + "\n";
                    existe = true;
                }
            } catch (IOException ex) {
                Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
            }
            lee.close();
            archivos.close();
            txt.setText(texto);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    class ThreadNumberCode extends Thread {

        private String salto = System.getProperty("line.separator");

        @Override
        public void run() {
            while (true) {
                try {
                    String lineas = txtCode.getText();
                    int l = recorrerCaracteres(lineas);
                    String numeros = "";
                    for (int i = 1; i <= l; i++) {
                        numeros += i + "\n";
                    }
                    txtNumLinea.setText(numeros);
                    sleep(100);
                } catch (InterruptedException ex) {
                    Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }

        private int recorrerCaracteres(String codigo) {
            int s = 1;
            for (int i = 0; i < codigo.length(); i++) {
                int c = codigo.charAt(i);
                if (c == 10) {
                    s++;
                }
            }
            return s;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                //System.out.println(info.getName());
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());

                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PnlToken;
    private javax.swing.JTable TblAnalisis;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem17;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    public javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel panelEditor;
    private javax.swing.JSplitPane splitPaneCentral;
    private javax.swing.JSplitPane splitPaneEC;
    private javax.swing.JTextPane txtCode;
    private javax.swing.JTextPane txtNumLinea;
    // End of variables declaration//GEN-END:variables
}
